from Znacheniay_NKA import num



n = 1023 # число битотв в C/A


def OneItaration(x = [1,1,1,1,1,1,1,1,1,1],lst = []): #х-базовое состояние
#  на следующей итерации х и lst  поменяются 
	r3 = x[2] 			# берем значение 3ого регистора
	r10 = x[9]			# берем значение 10 ого регистора 
	x.insert(0, r3^r10)	# перемножаем 3 регистор и 10 регистор и ставим на первое место в массив
	r = x.pop()			# удаляем постледний элемент из листа регистров и возвращяем его
	lst.append(r) 		# добавляем его в лист М-последовательности 
	return x, lst  		# возвращаем значения регистров и М - последовательности

	# pdb.set_trace()


def OneItaration2(x = [1,1,1,1,1,1,1,1,1,1],lst = []): # х-базовое состояние
#  на следующей итерации х и lst  поменяются 
	r2 = x[1]			# берем значение 2ого регистора
	r3 = x[2] 			# берем значение 3ого регистора
	r6 = x[5]			# берем значение 6ого регистора
	r8 = x[7]			# берем значение 8ого регистора
	r9 = x[8]			# берем значение 9ого регистора
	r10 = x[9]        	# берем значение 10ого регистора 
	x.insert(0, r2^r3^r6^r8^r9^r10)	# перемножаем 2,3,6,8,9,10 регистор по модулю и ставим на первое место в массив
	r = x.pop()			# удаляем постледний элемент из листа регистров и возвращяем его
	lst.append(r) 		# добавляем его в лист М-последовательности 
	return x, lst  		# возвращаем значения регистров и М - последовательности

	# pdb.set_trace()








def G2i(x,lst = [] ):
	
	n = input('Введите номер НКА....')
	n = num.get(n) # присваиввет n лист из двух чисел(номеров регистров)

	x += x[:20] # зациклем массив  G2

	for i in range(1023):
		r1 = x[n[0]+i] # чило в первом регисторе
		r2 = x[n[1]+i] # чило во втором региторе
		mod = r1^r2
		lst.append(mod) # добавляем сумму в массив G2i 
	return lst



	
	


def G1_G2_G2i(n): 
# функция выводит g1 , g2 , g2i
	for i in range(n):
		g1 = OneItaration()
		g2 = OneItaration2()

	g2i =G2i(g2[1])

	
	return g1[1], g2[1], g2i






def Gold( lst = []): # Выводит код голда

	g = G1_G2_G2i(n)

	g1 = g[0] 	 		#  G1 м-последовательность
	# print(g1)
	# print('---------G1')
	g2i = g[2]			#  G2i м-последовательность


	for i in range(len(g[0])): # перемножаем по элементно две последовательности 
		n1 = g1[i]
		n2 = g2i[i]
		mod =  n1^n2
		lst.append(mod)

	return lst

